package d.Vista;

import b.Entidades.Horario;
import b.Entidades.Ruta;
import c.Data.HorariosData;
import c.Data.RutaData;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author El Notaloko 2.1
 */
public class GestionHorarios extends javax.swing.JInternalFrame {

    RutaData rutaData;
    HorariosData horaData;
    
    /**
     * Creates new form GestionHorarios
     */
    public GestionHorarios(RutaData rutaData, HorariosData horaData) {
        initComponents();
        this.rutaData = rutaData;
        this.horaData = horaData;
    }

    private void limpiar(){
            
            txtHoraSalida.setText("");
            txtHoraLlegada.setText("");          
            Estado1.setSelected(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        HorarioComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHoraSalida = new javax.swing.JTextField();
        txtHoraLlegada = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Estado1 = new javax.swing.JCheckBox();
        Limpiarbtn = new javax.swing.JButton();
        Editarbtn = new javax.swing.JButton();
        Eliminarbtn = new javax.swing.JButton();
        Salirbtn = new javax.swing.JButton();
        RutaAsigComboBox = new javax.swing.JComboBox<>();
        jTrutaAsig = new javax.swing.JTextField();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("GestionHorarios");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 24)); // NOI18N
        jLabel1.setText("Gestion Horarios");

        jLabel2.setText("Horarios:");

        HorarioComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HorarioComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Ruta Asignada:");

        jLabel4.setText("Horario Salida:");

        jLabel5.setText("Horario Llegada:");

        jLabel6.setText("Estado:");

        Limpiarbtn.setText("Limpiar");
        Limpiarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarbtnActionPerformed(evt);
            }
        });

        Editarbtn.setText("Editar");
        Editarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarbtnActionPerformed(evt);
            }
        });

        Eliminarbtn.setText("Eliminar");
        Eliminarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarbtnActionPerformed(evt);
            }
        });

        Salirbtn.setText("Salir");
        Salirbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirbtnActionPerformed(evt);
            }
        });

        RutaAsigComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RutaAsigComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(164, 164, 164))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHoraSalida)
                            .addComponent(HorarioComboBox, 0, 411, Short.MAX_VALUE)
                            .addComponent(jTrutaAsig))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(Limpiarbtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Editarbtn)
                                .addGap(28, 28, 28)
                                .addComponent(Eliminarbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Salirbtn)
                                .addGap(38, 38, 38))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHoraLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Estado1)
                                        .addGap(18, 18, 18)
                                        .addComponent(RutaAsigComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(70, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(HorarioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTrutaAsig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtHoraLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(Estado1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RutaAsigComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Limpiarbtn)
                    .addComponent(Editarbtn)
                    .addComponent(Eliminarbtn)
                    .addComponent(Salirbtn))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirbtnActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_SalirbtnActionPerformed

    private void LimpiarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarbtnActionPerformed
            // TODO add your handling code here:
            limpiar();
    }//GEN-LAST:event_LimpiarbtnActionPerformed

    private void HorarioComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HorarioComboBoxActionPerformed
        // TODO add your handling code here:
//        setColectivo(true);
        Horario horarioSeleccionado = (Horario) HorarioComboBox.getSelectedItem();
        if (horarioSeleccionado != null) {
            RutaAsigComboBox.setSelectedItem(horarioSeleccionado.getRuta());
            txtHoraLlegada.setText(horarioSeleccionado.getHora_Llegada().toString());
            txtHoraSalida.setText(horarioSeleccionado.getHora_Salida().toString());           
            Estado1.setSelected(horarioSeleccionado.isEstado());
        } else {
            limpiar();
            Editarbtn.setEnabled(true);
            Eliminarbtn.setEnabled(true);
            if (HorarioComboBox.getItemCount() == 0) {
                HorarioComboBox.setEnabled(false);
            } else {
                HorarioComboBox.setEnabled(true);
            }
        }   
    }//GEN-LAST:event_HorarioComboBoxActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        HorarioComboBox.removeAllItems();
        List<Horario> horarios = horaData.listarHorarios();
        for (Horario hora : horarios) {
            HorarioComboBox.addItem(hora);
        }
        HorarioComboBox.setSelectedIndex(-1);
        RutaAsigComboBox.removeAllItems();
        List<Ruta> rutas = rutaData.listarRutas();
        for (Ruta ruta : rutas) {
            RutaAsigComboBox.addItem(ruta);
        }
        RutaAsigComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_formInternalFrameActivated

    private void EditarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarbtnActionPerformed
        // TODO add your handling code here:
        Horario horario = (Horario)HorarioComboBox.getSelectedItem();
        Ruta ruta = (Ruta)RutaAsigComboBox.getSelectedItem();
        boolean estado = Estado1.isSelected();
        System.out.println(estado);
        
        Horario hora = horaData.buscarHorario(horario.getID_Horario());
        boolean resultado;
        if(hora != null){
           hora.setRuta(ruta);
           hora.setHora_Llegada(horario.getHora_Llegada());
           hora.setHora_Salida(horario.getHora_Salida());
           hora.setEstado(estado);
           horaData.modificarHorario(horario);
           resultado=true;
        }else{
           System.out.println("No existe el colectivo");
           resultado=false;
        }
        if (resultado) {
            JOptionPane.showMessageDialog(this, "Colectivo modificado.");
        }else{
            JOptionPane.showMessageDialog(this, "No se pudo modificar el colectivo");
        }
        
    }//GEN-LAST:event_EditarbtnActionPerformed

    private void RutaAsigComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RutaAsigComboBoxActionPerformed
        // TODO add your handling code here:
        Horario horarioSeleccionado = (Horario) HorarioComboBox.getSelectedItem();
        if (horarioSeleccionado != null) {            
            txtHoraLlegada.setText(horarioSeleccionado.getHora_Llegada().toString());
            txtHoraSalida.setText(horarioSeleccionado.getHora_Salida().toString());           
            Estado1.setSelected(horarioSeleccionado.isEstado());
        } else {
            limpiar();
            Editarbtn.setEnabled(true);
            Eliminarbtn.setEnabled(true);
            if (HorarioComboBox.getItemCount() == 0) {
                HorarioComboBox.setEnabled(false);
            } else {
                HorarioComboBox.setEnabled(true);
            }
        }  
    }//GEN-LAST:event_RutaAsigComboBoxActionPerformed

    private void EliminarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarbtnActionPerformed
        // TODO add your handling code here:       
        //buscar colectivo
        Horario horarioSeleccionado = (Horario) HorarioComboBox.getSelectedItem();   
        if(horarioSeleccionado==null){
            JOptionPane.showMessageDialog(null, "No se encontro el colectivo vinculado a la matricula");
            return;
        }else{
            if(horarioSeleccionado.isEstado()==false){
                JOptionPane.showMessageDialog(null, "El colectivo esta dado de baja");
                return;
            }
        }
        // Eliminar colectivos y limpiar campos (excepto matricula)
        if (horaData.eliminarHorario(horarioSeleccionado.getID_Horario())){           
            HorarioComboBox.setSelectedIndex(-1);
            RutaAsigComboBox.setSelectedIndex(-1);
            txtHoraLlegada.setText("");
            txtHoraSalida.setText("");
            Estado1.setSelected(false);
            JOptionPane.showMessageDialog(this, "Colectivo dado de baja.", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Por alguna razon no se pudo eliminar
            JOptionPane.showMessageDialog(this, "No se pudo dar de baja al colectivo.", "Error", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_EliminarbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Editarbtn;
    private javax.swing.JButton Eliminarbtn;
    private javax.swing.JCheckBox Estado1;
    private javax.swing.JComboBox<Horario> HorarioComboBox;
    private javax.swing.JButton Limpiarbtn;
    private javax.swing.JComboBox<Ruta> RutaAsigComboBox;
    private javax.swing.JButton Salirbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTrutaAsig;
    private javax.swing.JTextField txtHoraLlegada;
    private javax.swing.JTextField txtHoraSalida;
    // End of variables declaration//GEN-END:variables
}

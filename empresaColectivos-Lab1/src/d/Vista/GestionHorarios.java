package d.Vista;

import b.Entidades.Horario;
import b.Entidades.Ruta;
import c.Data.HorariosData;
import c.Data.RutaData;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Grupo-3
 */
public class GestionHorarios extends javax.swing.JInternalFrame {

    RutaData rutaData;
    HorariosData horaData;

    /**
     * Creates new form GestionBrigada
     */
    public GestionHorarios(RutaData rutaData, HorariosData horaData) {
        initComponents();
        this.rutaData = rutaData;
        this.horaData = horaData;
    }

    private void limpiar() {
        jTRuta.setText("");
        HorarioComboBox.setSelectedIndex(-1);
        ComboBoxRuta.setSelectedIndex(-1);
        txtHoraSalida.setText("");
        txtHoraLlegada.setText("");          
        Estado1.setSelected(false);
    }

    private void setHorario(boolean flag) {
        HorarioComboBox.setEnabled(flag);
        ComboBoxRuta.setEnabled(flag);
        txtHoraSalida.setEnabled(flag);  // No hay un ineditable
        txtHoraLlegada.setEnabled(flag); // No hay un ineditable
        Editarbtn.setEnabled(flag);
    }

    private void sethorEnabled(boolean flag) {
        txtHoraSalida.setEnabled(flag);
        txtHoraLlegada.setEnabled(flag);
        //especialidadCB.setEnabled(flag);
        //cuartelCB.setEnabled(flag);
        //disponibleChB.setEnabled(flag);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        brigadaLabel = new javax.swing.JLabel();
        HorarioComboBox = new javax.swing.JComboBox<>();
        nombreLabel = new javax.swing.JLabel();
        txtHoraLlegada = new javax.swing.JTextField();
        especialidadLabel = new javax.swing.JLabel();
        cuartelLabel = new javax.swing.JLabel();
        ComboBoxRuta = new javax.swing.JComboBox<>();
        disponibleLabel = new javax.swing.JLabel();
        Estado1 = new javax.swing.JCheckBox();
        Limpiarbtn = new javax.swing.JButton();
        Editarbtn = new javax.swing.JButton();
        Eliminarbtn = new javax.swing.JButton();
        Salirbtn = new javax.swing.JButton();
        txtHoraSalida = new javax.swing.JTextField();
        jTRuta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Gestion Horario");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        brigadaLabel.setText("Horarios:");

        HorarioComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HorarioComboBoxActionPerformed(evt);
            }
        });

        nombreLabel.setText("Horario Salida:");

        especialidadLabel.setText("Hora Llegada:");

        cuartelLabel.setText("Ruta asignada:");

        disponibleLabel.setText("Estado");

        Limpiarbtn.setText("Editar");
        Limpiarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarbtnActionPerformed(evt);
            }
        });

        Editarbtn.setText("Guardar");
        Editarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarbtnActionPerformed(evt);
            }
        });

        Eliminarbtn.setText("Dar de Baja");
        Eliminarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarbtnActionPerformed(evt);
            }
        });

        Salirbtn.setText("Salir");
        Salirbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirbtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Modificar ruta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(brigadaLabel)
                                        .addComponent(cuartelLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTRuta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(HorarioComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(72, 72, 72)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtHoraSalida)
                                        .addComponent(txtHoraLlegada)
                                        .addComponent(ComboBoxRuta, 0, 323, Short.MAX_VALUE)))))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(disponibleLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Limpiarbtn)
                                    .addGap(18, 18, 18)
                                    .addComponent(Editarbtn)))
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Eliminarbtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Salirbtn))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Estado1)
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreLabel)
                            .addComponent(especialidadLabel))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HorarioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brigadaLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuartelLabel)
                    .addComponent(jTRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombreLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtHoraSalida, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(especialidadLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtHoraLlegada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(disponibleLabel)
                    .addComponent(Estado1))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Limpiarbtn)
                    .addComponent(Editarbtn)
                    .addComponent(Eliminarbtn)
                    .addComponent(Salirbtn))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        HorarioComboBox.removeAllItems();
        ComboBoxRuta.removeAllItems();
        
        List<Horario> horarios = horaData.listarHorarios();
        for (Horario hora : horarios) {
            HorarioComboBox.addItem(hora);
        }
        List<Ruta> rutas = rutaData.listarRutas();
        for (Ruta ruta : rutas) {
            ComboBoxRuta.addItem(ruta);
        }
        HorarioComboBox.setSelectedIndex(-1); 
    }//GEN-LAST:event_formInternalFrameActivated

    private void HorarioComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HorarioComboBoxActionPerformed
        setHorario(false);
        Horario horarioSeleccionado = (Horario) HorarioComboBox.getSelectedItem();
        if (horarioSeleccionado != null) {
//            ComboBoxRuta.setSelectedItem(horarioSeleccionado.getRuta());
            jTRuta.setText(horarioSeleccionado.getRuta().toString());
            txtHoraLlegada.setText(horarioSeleccionado.getHora_Llegada().toString());
            txtHoraSalida.setText(horarioSeleccionado.getHora_Salida().toString());           
            Estado1.setSelected(horarioSeleccionado.isEstado());
            Editarbtn.setEnabled(true);
            Eliminarbtn.setEnabled(true);
            sethorEnabled(true);
        } else {
            limpiar();
            Editarbtn.setEnabled(false);
            Eliminarbtn.setEnabled(false);
            sethorEnabled(false);
            if (HorarioComboBox.getItemCount() == 0) {
                HorarioComboBox.setEnabled(false);
            } else {
                HorarioComboBox.setEnabled(true);
            }
        }
    }//GEN-LAST:event_HorarioComboBoxActionPerformed

    private void LimpiarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarbtnActionPerformed
        Horario horarioSeleccionado = (Horario) HorarioComboBox.getSelectedItem();
            if (horarioSeleccionado !=null) {
                Editarbtn.setEnabled(false);
                setHorario(true);
            }else{
                JOptionPane.showMessageDialog(this, "No se pudo modificar el horario");
            }
    }//GEN-LAST:event_LimpiarbtnActionPerformed

    private void EditarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarbtnActionPerformed
        Horario horarioSeleccionada = (Horario) HorarioComboBox.getSelectedItem();
        if (horarioSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Seleccione primero un horario a editar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String horaSalida = txtHoraSalida.getText().trim();
        String horaLlegada = txtHoraSalida.getText().trim();
        Ruta ruta = (Ruta)ComboBoxRuta.getSelectedItem();
        boolean estado = Estado1.isSelected();

        if (horaSalida.isBlank() || horaLlegada == null || ruta == null) {
            JOptionPane.showMessageDialog(this, "No puede haber campos vacios.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        LocalTime horSalida = LocalTime.parse(horaSalida);
        LocalTime horLlegada = LocalTime.parse(horaLlegada);

        Horario horario = new Horario(ruta, horSalida, horLlegada, estado);
        horario.setID_Horario(horarioSeleccionada.getID_Horario());
        if (horaData.modificarHorario(horario)) {
            horarioSeleccionada.setRuta(ruta);
            horarioSeleccionada.setHora_Salida(horSalida);
            horarioSeleccionada.setHora_Llegada(horLlegada);
            horarioSeleccionada.setEstado(estado);
            JOptionPane.showMessageDialog(this, "Horario modificada.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo guardar la edición.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_EditarbtnActionPerformed

    private void EliminarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarbtnActionPerformed
        //buscar colectivo
        Horario horarioSeleccionado = (Horario) HorarioComboBox.getSelectedItem();   
        if(horarioSeleccionado==null){
            JOptionPane.showMessageDialog(null, "No se encontro el horario");
            return;
        }else{
            if(horarioSeleccionado.isEstado()==false){
                JOptionPane.showMessageDialog(null, "El horario esta dado de baja");
                return;
            }
        }
        // Eliminar colectivos y limpiar campos (excepto matricula)
        if (horaData.eliminarHorario(horarioSeleccionado.getID_Horario())){           
            HorarioComboBox.setSelectedIndex(-1);
            ComboBoxRuta.setSelectedIndex(-1);
            txtHoraLlegada.setText("");
            txtHoraSalida.setText("");
            Estado1.setSelected(false);
            JOptionPane.showMessageDialog(this, "Horario dado de baja.", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Por alguna razon no se pudo eliminar
            JOptionPane.showMessageDialog(this, "No se pudo dar de baja al horario.", "Error", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_EliminarbtnActionPerformed

    private void SalirbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirbtnActionPerformed
        this.hide();
    }//GEN-LAST:event_SalirbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Ruta> ComboBoxRuta;
    private javax.swing.JButton Editarbtn;
    private javax.swing.JButton Eliminarbtn;
    private javax.swing.JCheckBox Estado1;
    private javax.swing.JComboBox<Horario> HorarioComboBox;
    private javax.swing.JButton Limpiarbtn;
    private javax.swing.JButton Salirbtn;
    private javax.swing.JLabel brigadaLabel;
    private javax.swing.JLabel cuartelLabel;
    private javax.swing.JLabel disponibleLabel;
    private javax.swing.JLabel especialidadLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTRuta;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JTextField txtHoraLlegada;
    private javax.swing.JTextField txtHoraSalida;
    // End of variables declaration//GEN-END:variables
}
